buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.3"
    id 'io.spring.dependency-management' version "1.0.5.RELEASE"
    id 'org.springframework.boot' version '2.1.1.RELEASE'
    id 'idea'
}

dependencies {
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

ext {
    guavaVersion = '26.0-jre'
    springSecurityOauthBootVersion = '2.1.1.RELEASE'
    springSessionVersion = '2.1.1.RELEASE'
    snippetsDir = file('build/generated-snippets')
}

allprojects {
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
}

configure(subprojects - project(':docs')) {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }


    dependencies {
        testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        testImplementation 'com.h2database:h2:1.4.196'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation("org.junit.jupiter:junit-jupiter-api")
        testImplementation 'org.springframework.security:spring-security-test'
        testRuntime("org.junit.jupiter:junit-jupiter-engine")
        testImplementation("junit:junit")
        testRuntime("org.junit.vintage:junit-vintage-engine")
    }

    configurations {
        all {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//            exclude group: 'junit', module: 'junit'
        }
    }

    sourceSets {
        intTest {
            compileClasspath += sourceSets.main.output + sourceSets.test.output
            runtimeClasspath += sourceSets.main.output + sourceSets.test.output
        }
    }

    configurations {
        intTestImplementation.extendsFrom testImplementation
        intTestRuntimeOnly.extendsFrom testRuntimeOnly
    }

    task integrationTest(type: Test) {
        description = 'Runs integration tests.'
        group = 'verification'

        testClassesDirs = sourceSets.intTest.output.classesDirs
        classpath = sourceSets.intTest.runtimeClasspath
        shouldRunAfter test
    }
    check.dependsOn integrationTest
    compileJava.dependsOn processResources

    test {
        useJUnitPlatform()
        outputs.dir snippetsDir
    }

    asciidoctor {
        inputs.dir snippetsDir
        dependsOn test
    }
}

configure(subprojects.findAll {
    it.name == 'spring-demo-web' || it.name == 'spring-demo-job'
}) {
}

idea {
    module {
        excludeDirs += file('log')
    }
}

